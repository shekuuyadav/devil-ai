
/* Define :root variables FIRST */
:root {
  --background: 0 0% 13.3%; /* Dark Gray #222222 */
  --foreground: 0 0% 98%; /* Light Gray for text */

  --card: 0 0% 10%; /* Darker card background */
  --card-foreground: 0 0% 98%;

  --popover: 0 0% 10%;
  --popover-foreground: 0 0% 98%;

  --primary: 2.8 100% 60.6%; /* Intense Red #FF4136 */
  --primary-foreground: 0 0% 98%; /* White for contrast on red */

  --secondary: 0 0% 20%; /* Slightly lighter gray for secondary elements */
  --secondary-foreground: 0 0% 98%;

  --muted: 0 0% 20%;
  --muted-foreground: 0 0% 60%; /* Muted text */

  --accent: 27.9 100% 55.1%; /* Fiery Orange #FF851B */
  --accent-foreground: 0 0% 10%; /* Dark text for contrast on orange */

  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 0 0% 98%;

  --border: 0 0% 25%; /* Slightly lighter border for dark theme */
  --input: 0 0% 20%; /* Dark input background */
  --ring: 2.8 100% 60.6%; /* Ring color to match primary */

  --chart-1: 12 76% 61%;
  --chart-2: 173 58% 39%;
  --chart-3: 197 37% 24%;
  --chart-4: 43 74% 66%;
  --chart-5: 27 87% 67%;
  --radius: 0.5rem;

  /* Sidebar variables for dark theme (can be adjusted if sidebar is used extensively) */
  --sidebar-background: 0 0% 10%;
  --sidebar-foreground: 0 0% 98%;
  --sidebar-primary: 2.8 100% 60.6%;
  --sidebar-primary-foreground: 0 0% 98%;
  --sidebar-accent: 27.9 100% 55.1%;
  --sidebar-accent-foreground: 0 0% 10%;
  --sidebar-border: 0 0% 20%;
  --sidebar-ring: 2.8 100% 60.6%;
}

/* Then include Tailwind directives */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Then apply styles using utilities in appropriate layers */
@layer base {
  * {
    /*
      The original rule was `@apply border-border;` which caused an error.
      Using the CSS variable directly for border-color is a more robust way
      to set a default border color for elements that already have a border style/width.
      The `border-border` utility class generated by Tailwind (which sets border-color)
      remains available for use on specific components.
    */
    border-color: hsl(var(--border));
  }
  body {
    @apply bg-background text-foreground;
    /* font-family is already applied via className="font-body" in RootLayout */
  }
}

/* Custom animations and scrollbar can stay at the end */
@keyframes micPulse {
  0%, 100% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.7; transform: scale(1.1); }
}
.animate-mic-pulse {
  animation: micPulse 1.5s infinite ease-in-out;
}

/* Custom scrollbar for webkit browsers */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background: hsl(var(--background));
}
::-webkit-scrollbar-thumb {
  background: hsl(var(--muted));
  border-radius: 4px;
}
::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--secondary-foreground));
}
